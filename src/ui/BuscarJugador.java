/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.net.ConnectException;
import javax.swing.JOptionPane;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.Criteria;
import org.hibernate.criterion.Projections;
import java.util.*;
import javax.swing.table.DefaultTableModel;
import org.hibernate.criterion.Restrictions;
import pojo.Jugadores;

/**
 *
 * @author jesuk
 */
public class BuscarJugador extends javax.swing.JFrame {

    /**
     * Creates new form BuscarJugador
     */
    public BuscarJugador() {
        initComponents();
        setTitle("Agregar jugador");
        setLocationRelativeTo(null);
        rbNombre.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupJugador = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        JButtonAceptar = new javax.swing.JButton();
        inputTermino = new javax.swing.JTextField();
        rbNombre = new javax.swing.JRadioButton();
        rbApellido = new javax.swing.JRadioButton();
        rbPosicion = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaResultadoBusqueda = new javax.swing.JTable();
        rbTodos = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Complete los siguientes campos para buscar uno o varios jugadores");

        jLabel2.setText("Termino de busqueda:");

        JButtonAceptar.setText("Buscar");
        JButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonAceptarActionPerformed(evt);
            }
        });

        inputTermino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTerminoActionPerformed(evt);
            }
        });

        buttonGroupJugador.add(rbNombre);
        rbNombre.setText("Nombre");

        buttonGroupJugador.add(rbApellido);
        rbApellido.setText("Apellido");

        buttonGroupJugador.add(rbPosicion);
        rbPosicion.setText("Posición");

        jLabel3.setText("Seleccione la opcioón de busqueda:");

        tablaResultadoBusqueda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DNI", "Nombre", "Apellido", "Posición", "Edad", "Dorsal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaResultadoBusqueda);

        buttonGroupJugador.add(rbTodos);
        rbTodos.setText("Todos");
        rbTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbNombre)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbTodos))
                                    .addComponent(rbApellido)
                                    .addComponent(rbPosicion)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(inputTermino))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
                            .addComponent(JButtonAceptar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(inputTermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbNombre)
                    .addComponent(rbTodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbApellido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbPosicion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(JButtonAceptar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonAceptarActionPerformed
        Session s = controlador.Controller.getSessionFactory().openSession();
        Criteria criteria = s.createCriteria(Jugadores.class);
        String terminoDeBusqueda = inputTermino.getText().toString();
        
        /*  Definimos el modelo de la tabla a renderizar    */
        DefaultTableModel tableModel = new DefaultTableModel();
        /*  Definimos las columnas de la tabla  */
        tableModel.addColumn("DNI");
        tableModel.addColumn("Nombre");
        tableModel.addColumn("Apellido");
        tableModel.addColumn("Posicion");
        tableModel.addColumn("Edad");
        tableModel.addColumn("Dorsal");
        
        /*  A partir de un radioButton discriminamos por cual tipo de termino ralizamos la busqueda */
        if(rbNombre.isSelected()){
            
            /*  Agregamos una restriccion que nos permite obtener los resultados que buscamos 
            de forma que se filtre o se busque unicamente por el termino seleccionado en el 
            radioButton */
            criteria.add(Restrictions.eq("nombre", terminoDeBusqueda));
        }else if( rbApellido.isSelected()){
            criteria.add(Restrictions.eq("apellido", terminoDeBusqueda));
        }else if (rbPosicion.isSelected()){
            criteria.add(Restrictions.eq("posicion", terminoDeBusqueda));
        }else if(rbTodos.isSelected()){
            inputTermino.setText("");
        }

        List<Jugadores> listaJugadores = criteria.list();
        
        for (int index = 0; index < listaJugadores.size(); index++) {
            
            /*  Agregamos los valores obtenidos a partir de la busqueda enla Base de Datos  */
            tableModel.addRow(new Object[]{
                listaJugadores.get(index).getDni(),
                listaJugadores.get(index).getNombre(),
                listaJugadores.get(index).getApellido(),
                listaJugadores.get(index).getPosicion(),
                listaJugadores.get(index).getEdad(),
                listaJugadores.get(index).getDorsal()
            });
            
        }
        
        /*  Para poder visualizar el contenido en la tabla debemos setear el modelo definido anteriormente
        dentro de la variable que se vincula con la tabla en la vista   */
        tablaResultadoBusqueda.setModel(tableModel);
        
        /*  Al finalizar la busqueda y mostrar los resultados, cerramos la sesion y colocamos en null el 
        criterio para evitar problemas en la conexion a la Base de Datos    */
        s.close();
        criteria = null;

    }//GEN-LAST:event_JButtonAceptarActionPerformed

    private void inputTerminoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTerminoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTerminoActionPerformed

    private void rbTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTodosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbTodosActionPerformed

    @Override
    public void setDefaultCloseOperation(int operation) {
        dispose();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JButtonAceptar;
    private javax.swing.ButtonGroup buttonGroupJugador;
    private javax.swing.JTextField inputTermino;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbApellido;
    private javax.swing.JRadioButton rbNombre;
    private javax.swing.JRadioButton rbPosicion;
    private javax.swing.JRadioButton rbTodos;
    private javax.swing.JTable tablaResultadoBusqueda;
    // End of variables declaration//GEN-END:variables
}
