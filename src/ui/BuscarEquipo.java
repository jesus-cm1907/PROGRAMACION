/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import org.hibernate.Criteria;
import org.hibernate.Session;
import pojo.Equipos;
import java.net.ConnectException;
import javax.swing.JOptionPane;
import org.hibernate.Transaction;
import org.hibernate.criterion.Projections;
import java.util.*;
import javafx.scene.effect.ImageInput;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.hibernate.criterion.Restrictions;
import sun.misc.BASE64Decoder;

/**
 *
 * @author jesuk
 */
public class BuscarEquipo extends javax.swing.JFrame {

    /**
     * Creates new form BuscarEquipo
     */
    public BuscarEquipo() {
        initComponents();
        setTitle("Buscar equipo");
        setLocationRelativeTo(null);
        rbNombre.setSelected(true);

    }

    /**
     * This method is called from within the *constructor to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoOptions = new javax.swing.ButtonGroup();
        jLabelEnunciado = new javax.swing.JLabel();
        jLabel2Selecciona = new javax.swing.JLabel();
        inputSelecciona = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        rbNombre = new javax.swing.JRadioButton();
        rbVictorias = new javax.swing.JRadioButton();
        rbDerrotas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaResultadoBusqueda = new javax.swing.JTable();
        rbTodos = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelEnunciado.setText("Complete los siguientes campos para buscar un Equipo");

        jLabel2Selecciona.setText("Selecciona:");

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        grupoOptions.add(rbNombre);
        rbNombre.setText("Nombre");

        grupoOptions.add(rbVictorias);
        rbVictorias.setText("Victorias");
        rbVictorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbVictoriasActionPerformed(evt);
            }
        });

        grupoOptions.add(rbDerrotas);
        rbDerrotas.setText("Derrotas");

        tablaResultadoBusqueda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Victorias", "Derrotas", "Escudo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaResultadoBusqueda);

        grupoOptions.add(rbTodos);
        rbTodos.setText("Todos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel2Selecciona))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(rbNombre)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputSelecciona))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(rbTodos)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbDerrotas)
                            .addComponent(rbVictorias))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabelEnunciado)
                .addGap(132, 132, 132))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelEnunciado)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2Selecciona)
                    .addComponent(inputSelecciona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbNombre)
                    .addComponent(rbTodos))
                .addGap(18, 18, 18)
                .addComponent(rbVictorias)
                .addGap(18, 18, 18)
                .addComponent(rbDerrotas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        Session s = controlador.Controller.getSessionFactory().openSession();
        Criteria criteria = s.createCriteria(Equipos.class);
        String terminoBusqueda = inputSelecciona.getText().toString();

        DefaultTableModel Table2 = new DefaultTableModel();

        Table2.addColumn("Nombre");
        Table2.addColumn("Victorias");
        Table2.addColumn("Derrotas");
        Table2.addColumn("Escudo");

        if (rbNombre.isSelected()) {
            criteria.add(Restrictions.eq("nombre", terminoBusqueda));
        } else if (rbVictorias.isSelected()) {
            int victorias = Integer.parseInt(terminoBusqueda);
            criteria.add(Restrictions.eq("victorias", victorias));

        } else if (rbDerrotas.isSelected()) {
            int derrotas = Integer.parseInt(terminoBusqueda);
            criteria.add(Restrictions.eq("derrotas", derrotas));
        } else if (rbTodos.isSelected()) {
            inputSelecciona.setText("");
        }

        List<Equipos> listaEquipos = criteria.list();
        ImageIcon escudo = null;
        
        JLabel label = new JLabel();
        for (int index = 0; index < listaEquipos.size(); index++) {
            escudo = obtenerImageIcondelEscudo(listaEquipos.get(index).getEscudo());
            label.setIcon(escudo);
            tablaResultadoBusqueda.getColumn("Escudo").setCellRenderer(new LabelRender());
            Table2.addRow(new Object[]{
                listaEquipos.get(index).getNombre(),
                listaEquipos.get(index).getVictorias(),
                listaEquipos.get(index).getDerrotas(),
                label});
            tablaResultadoBusqueda.setModel(Table2);
        }

        s.close();
        criteria = null;
    }//GEN-LAST:event_jButton1ActionPerformed

    private ImageIcon obtenerImageIcondelEscudo(String imagenBase64){
        ImageIcon escudo = null;
        
        BufferedImage imagenDecodificada = decodeToImage(imagenBase64);
        Image imagenRedimensionada = imagenDecodificada.getScaledInstance(20, 20, Image.SCALE_SMOOTH);
        escudo = new ImageIcon(imagenRedimensionada);        
        
        return escudo;
    }
    
    private BufferedImage decodeToImage(String imageString) {
 
        BufferedImage image = null;
        byte[] imageByte;
        try {
            BASE64Decoder decoder = new BASE64Decoder();
            imageByte = decoder.decodeBuffer(imageString);
            ByteArrayInputStream bis = new ByteArrayInputStream(imageByte);
            image = ImageIO.read(bis);
            bis.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return image;
    }
    
    
    private void rbVictoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbVictoriasActionPerformed


    }//GEN-LAST:event_rbVictoriasActionPerformed

    @Override
    public void setDefaultCloseOperation(int operation) {
        dispose();

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoOptions;
    private javax.swing.JTextField inputSelecciona;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2Selecciona;
    private javax.swing.JLabel jLabelEnunciado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbDerrotas;
    private javax.swing.JRadioButton rbNombre;
    private javax.swing.JRadioButton rbTodos;
    private javax.swing.JRadioButton rbVictorias;
    private javax.swing.JTable tablaResultadoBusqueda;
    // End of variables declaration//GEN-END:variables
}
